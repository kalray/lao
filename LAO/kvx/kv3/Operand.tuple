/*
 * kv3/Operand.tuple
 *  (c) Copyright 2010-2018 Kalray SA.
 * Automatically generated from the Machine Description System (MDS).
 */

#ifndef Operand
#define Operand(ID, METHOD, WORDTYPE, ENCODE, DECODE)
#else /*Operand*/
Operand(kv3_registerN, METHOD(RegClass,kv3_quadReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerN_0, METHOD(RegClass,kv3_quadReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerN_1, METHOD(RegClass,kv3_quadReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerN_2, METHOD(RegClass,kv3_quadReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerN_3, METHOD(RegClass,kv3_quadReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBe, METHOD(RegClass,kv3_vectorRegE), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<13); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13),
        DECODE(VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerCo, METHOD(RegClass,kv3_vectorRegO), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1)))
Operand(kv3_byteshift, METHOD(Immediate,kv3_unsigned6), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerZ, METHOD(RegClass,kv3_singleReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerBo, METHOD(RegClass,kv3_vectorRegO), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<13); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13),
        DECODE(VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerCe, METHOD(RegClass,kv3_vectorRegE), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerA, METHOD(RegClass,kv3_vectorReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerA_0, METHOD(RegClass,kv3_vectorReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerA_1, METHOD(RegClass,kv3_vectorReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerA_2, METHOD(RegClass,kv3_vectorReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerA_3, METHOD(RegClass,kv3_vectorReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerAp, METHOD(RegClass,kv3_wideReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerAp_0, METHOD(RegClass,kv3_wideReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerAp_1, METHOD(RegClass,kv3_wideReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerBp, METHOD(RegClass,kv3_wideReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<13); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13),
        DECODE(VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerBp_0, METHOD(RegClass,kv3_wideReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<13); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13),
        DECODE(VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerBp_1, METHOD(RegClass,kv3_wideReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<13); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13),
        DECODE(VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerC, METHOD(RegClass,kv3_vectorReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerC_0, METHOD(RegClass,kv3_vectorReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerC_1, METHOD(RegClass,kv3_vectorReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerC_2, METHOD(RegClass,kv3_vectorReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerC_3, METHOD(RegClass,kv3_vectorReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerD, METHOD(RegClass,kv3_vectorReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerD_0, METHOD(RegClass,kv3_vectorReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerD_1, METHOD(RegClass,kv3_vectorReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerD_2, METHOD(RegClass,kv3_vectorReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerD_3, METHOD(RegClass,kv3_vectorReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerA0, METHOD(RegClass,kv3_blockReg0M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerA1, METHOD(RegClass,kv3_blockReg1M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerA2, METHOD(RegClass,kv3_blockReg2M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerA3, METHOD(RegClass,kv3_blockReg3M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerAq, METHOD(RegClass,kv3_matrixReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerAq_0, METHOD(RegClass,kv3_matrixReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerAq_1, METHOD(RegClass,kv3_matrixReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerAq_2, METHOD(RegClass,kv3_matrixReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerAq_3, METHOD(RegClass,kv3_matrixReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBq, METHOD(RegClass,kv3_matrixReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<14); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14),
        DECODE(VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBq_0, METHOD(RegClass,kv3_matrixReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<14); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14),
        DECODE(VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBq_1, METHOD(RegClass,kv3_matrixReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<14); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14),
        DECODE(VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBq_2, METHOD(RegClass,kv3_matrixReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<14); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14),
        DECODE(VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerBq_3, METHOD(RegClass,kv3_matrixReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<14); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14),
        DECODE(VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerAl, METHOD(RegClass,kv3_blockRegE), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_roundint, METHOD(Modifier,kv3_roundint), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1)))
Operand(kv3_saturate, METHOD(Modifier,kv3_saturate), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1)))
Operand(kv3_registerAh, METHOD(RegClass,kv3_blockRegO), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerAx, METHOD(RegClass,kv3_coproReg0M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerAy, METHOD(RegClass,kv3_coproReg1M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerAz, METHOD(RegClass,kv3_coproReg2M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerAt, METHOD(RegClass,kv3_coproReg3M4), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerB, METHOD(RegClass,kv3_vectorReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerB_0, METHOD(RegClass,kv3_vectorReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerB_1, METHOD(RegClass,kv3_vectorReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerB_2, METHOD(RegClass,kv3_vectorReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerB_3, METHOD(RegClass,kv3_vectorReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1)))
Operand(kv3_xrounding, METHOD(Modifier,kv3_rounding), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1)))
Operand(kv3_silent2, METHOD(Modifier,kv3_silent), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<11); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11),
        DECODE(VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1)))
Operand(kv3_rectify, METHOD(Modifier,kv3_rectify), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1)))
Operand(kv3_branchcond, METHOD(Modifier,kv3_scalarcond), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<23); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<23),
        DECODE(VALUE |= (WORDS[0]>>23)&(((uint32_t)1<<4)-1)))
Operand(kv3_pcrel17, METHOD(Immediate,kv3_pcrel17), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<17)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<17)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<17)-1)))
Operand(kv3_systemT2, METHOD(RegClass,kv3_onlyfxReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemAlone, METHOD(RegClass,kv3_aloneReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemT4, METHOD(RegClass,kv3_systemReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemT3, METHOD(RegClass,kv3_onlysetReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemRA, METHOD(RegClass,kv3_onlyraReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemS2, METHOD(RegClass,kv3_onlygetReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemS3, METHOD(RegClass,kv3_systemReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_systemS4, METHOD(RegClass,kv3_onlyswapReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_sysnumber, METHOD(Immediate,kv3_sysnumber), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<12)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<12)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<12)-1)))
Operand(kv3_pcrel27, METHOD(Immediate,kv3_pcrel27), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<27)-1)))
Operand(kv3_registerW, METHOD(RegClass,kv3_singleReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_signed10, METHOD(Immediate,kv3_signed10), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<10)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1)))
Operand(kv3_variant, METHOD(Modifier,kv3_variant), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<2)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1)))
Operand(kv3_upper27_lower10, METHOD(Immediate,kv3_signed37), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<10)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1)))
Operand(kv3_extend27_upper27_lower10, METHOD(Immediate,kv3_wrapped64), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<10)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1)))
Operand(kv3_registerM, METHOD(RegClass,kv3_pairedReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerM_0, METHOD(RegClass,kv3_pairedReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerM_1, METHOD(RegClass,kv3_pairedReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_speculate, METHOD(Modifier,kv3_speculate), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1)))
Operand(kv3_column, METHOD(Modifier,kv3_column), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<2)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1)))
Operand(kv3_registerT, METHOD(RegClass,kv3_singleReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerU, METHOD(RegClass,kv3_pairedReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerU_0, METHOD(RegClass,kv3_pairedReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerU_1, METHOD(RegClass,kv3_pairedReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerV, METHOD(RegClass,kv3_quadReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerV_0, METHOD(RegClass,kv3_quadReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerV_1, METHOD(RegClass,kv3_quadReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerV_2, METHOD(RegClass,kv3_quadReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerV_3, METHOD(RegClass,kv3_quadReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<20); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20),
        DECODE(VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerE, METHOD(RegClass,kv3_vectorReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerE_0, METHOD(RegClass,kv3_vectorReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerE_1, METHOD(RegClass,kv3_vectorReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerE_2, METHOD(RegClass,kv3_vectorReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerE_3, METHOD(RegClass,kv3_vectorReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1)))
Operand(kv3_registerR, METHOD(RegClass,kv3_quadReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<2); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2),
        DECODE(VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerR_0, METHOD(RegClass,kv3_quadReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<2); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2),
        DECODE(VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerR_1, METHOD(RegClass,kv3_quadReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<2); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2),
        DECODE(VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerR_2, METHOD(RegClass,kv3_quadReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<2); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2),
        DECODE(VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerR_3, METHOD(RegClass,kv3_quadReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<2); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2),
        DECODE(VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerY, METHOD(RegClass,kv3_singleReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_lsucond, METHOD(Modifier,kv3_scalarcond), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1)))
Operand(kv3_offset27, METHOD(Immediate,kv3_signed27), WORDTYPE(uint32_t),
        ENCODE(WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1)))
Operand(kv3_extend27_offset27, METHOD(Immediate,kv3_signed54), WORDTYPE(uint32_t),
        ENCODE(WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1)))
Operand(kv3_doscale, METHOD(Modifier,kv3_doscale), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1)))
Operand(kv3_signed16, METHOD(Immediate,kv3_signed16), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<16)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<16)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<16)-1)))
Operand(kv3_extend6_upper27_lower10, METHOD(Immediate,kv3_signed43), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<10)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[0] &= ~((((uint32_t)1<<6)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1)))
Operand(kv3_comparison, METHOD(Modifier,kv3_comparison), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1)))
Operand(kv3_scalarcond, METHOD(Modifier,kv3_scalarcond), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1)))
Operand(kv3_stopbit2_stopbit4, METHOD(Immediate,kv3_unsigned6), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12; VALUE >>= 4; WORDS[0] &= ~((((uint32_t)1<<2)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); VALUE <<= 4; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1)))
Operand(kv3_startbit, METHOD(Immediate,kv3_unsigned6), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_upper27_lower5, METHOD(Immediate,kv3_wrapped32), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<6; VALUE >>= 5; WORDS[1] &= ~((((uint32_t)1<<27)-1)<<0); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0),
        DECODE(VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 5; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<5)-1)))
Operand(kv3_splat32, METHOD(Modifier,kv3_splat32), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<11); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11),
        DECODE(VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1)))
Operand(kv3_simdcond, METHOD(Modifier,kv3_simplecond), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<3)-1)))
Operand(kv3_unsigned6, METHOD(Immediate,kv3_unsigned6), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<6)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1)))
Operand(kv3_floatcomp, METHOD(Modifier,kv3_floatcomp), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<3)-1)))
Operand(kv3_registerP, METHOD(RegClass,kv3_pairedReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerP_0, METHOD(RegClass,kv3_pairedReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerP_1, METHOD(RegClass,kv3_pairedReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_rounding2, METHOD(Modifier,kv3_rounding), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1)))
Operand(kv3_rounding, METHOD(Modifier,kv3_rounding), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<3)-1)<<12); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12),
        DECODE(VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1)))
Operand(kv3_silent, METHOD(Modifier,kv3_silent), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<15); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15),
        DECODE(VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1)))
Operand(kv3_registerO, METHOD(RegClass,kv3_pairedReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerO_0, METHOD(RegClass,kv3_pairedReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerO_1, METHOD(RegClass,kv3_pairedReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<7); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7),
        DECODE(VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1)))
Operand(kv3_brknumber, METHOD(Immediate,kv3_brknumber), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<2)-1)<<0); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<0),
        DECODE(VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<2)-1)))
Operand(kv3_registerDp, METHOD(RegClass,kv3_wideReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerDp_0, METHOD(RegClass,kv3_wideReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerDp_1, METHOD(RegClass,kv3_wideReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<1); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1),
        DECODE(VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerAe, METHOD(RegClass,kv3_vectorRegE), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(kv3_registerAo, METHOD(RegClass,kv3_vectorRegO), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<5)-1)<<19); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19),
        DECODE(VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1)))
Operand(v2_systemT2, METHOD(RegClass,v2_onlyfxReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemAlone, METHOD(RegClass,v2_aloneReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemT4, METHOD(RegClass,v2_systemReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemT3, METHOD(RegClass,v2_onlysetReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemS2, METHOD(RegClass,v2_onlygetReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemS3, METHOD(RegClass,v2_systemReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(v2_systemS4, METHOD(RegClass,v2_onlyswapReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<9)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6),
        DECODE(VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1)))
Operand(kv3_cachelev, METHOD(Modifier,kv3_cachelev), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<2)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1)))
Operand(kv3_boolcas, METHOD(Modifier,kv3_boolcas), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<25); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25),
        DECODE(VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1)))
Operand(kv3_channel, METHOD(Modifier,kv3_channel), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1)))
Operand(kv3_conjugate, METHOD(Modifier,kv3_conjugate), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<24); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24),
        DECODE(VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1)))
Operand(kv3_multransm_multransl, METHOD(Modifier,kv3_transpose), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<1)-1)<<6); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<6; VALUE >>= 1; WORDS[0] &= ~((((uint32_t)1<<1)-1)<<18); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<18),
        DECODE(VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<1)-1); VALUE <<= 1; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<1)-1)))
Operand(kv3_registerQ, METHOD(RegClass,kv3_quadReg), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerQ_0, METHOD(RegClass,kv3_quadReg_0), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerQ_1, METHOD(RegClass,kv3_quadReg_1), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerQ_2, METHOD(RegClass,kv3_quadReg_2), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1)))
Operand(kv3_registerQ_3, METHOD(RegClass,kv3_quadReg_3), WORDTYPE(uint32_t),
        ENCODE(WORDS[0] &= ~((((uint32_t)1<<4)-1)<<8); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8),
        DECODE(VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1)))
#endif/*Operand*/
#undef Operand

#ifndef Operands
#define Operands(ID, OPERANDS, RELOCATABLE, ENCODE, DECODE)
#else /*Operands*/
Operands(kv3_registerZ, OPERANDS(1, OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_sysnumber, OPERANDS(1, OPERAND(kv3_sysnumber)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_sysnumber(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<12)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<12)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_sysnumber(VALUE);  }))
Operands(kv3_registerZ_kv3_pcrel17, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(kv3_pcrel17)), RELOCATABLE(RANK(2), OPERAND(kv3_pcrel17), IMMEDIATE(kv3_pcrel17)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_pcrel17(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<17)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<17)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_pcrel17(VALUE);  }))
Operands(kv3_systemT2_kv3_registerZ, OPERANDS(2, OPERAND(kv3_systemT2) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_onlyfxReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_onlyfxReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_systemAlone_kv3_registerZ, OPERANDS(2, OPERAND(kv3_systemAlone) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_aloneReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_aloneReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_systemT4_kv3_registerZ, OPERANDS(2, OPERAND(kv3_systemT4) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_systemReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_systemReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerZ_kv3_systemS2, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(kv3_systemS2)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_onlygetReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_onlygetReg(VALUE);  }))
Operands(kv3_registerZ_kv3_systemS3, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(kv3_systemS3)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_systemReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_systemReg(VALUE);  }))
Operands(kv3_systemT3_kv3_registerZ, OPERANDS(2, OPERAND(kv3_systemT3) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_onlysetReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_onlysetReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_systemRA_kv3_registerZ, OPERANDS(2, OPERAND(kv3_systemRA) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_onlyraReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_onlyraReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerZ_kv3_systemS4, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(kv3_systemS4)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_onlyswapReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_onlyswapReg(VALUE);  }))
Operands(kv3_registerZ_kv3_systemAlone, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(kv3_systemAlone)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_aloneReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_aloneReg(VALUE);  }))
Operands(kv3_pcrel27, OPERANDS(1, OPERAND(kv3_pcrel27)), RELOCATABLE(RANK(1), OPERAND(kv3_pcrel27), IMMEDIATE(kv3_pcrel27)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_pcrel27(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_pcrel27(VALUE);  }))
Operands(kv3_branchcond_kv3_registerZ_kv3_pcrel17, OPERANDS(3, OPERAND(kv3_branchcond) OPERAND(kv3_registerZ) OPERAND(kv3_pcrel17)), RELOCATABLE(RANK(3), OPERAND(kv3_pcrel17), IMMEDIATE(kv3_pcrel17)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<23;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_pcrel17(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<17)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>23)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<17)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_pcrel17(VALUE);  }))
Operands(kv3_variant_kv3_registerW_kv3_signed10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerW) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerW_kv3_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerW) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerW_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerW) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerW_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerW_kv3_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerW_kv3_extend27_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_doscale_kv3_registerW_kv3_registerY_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_doscale) OPERAND(kv3_registerW) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerM_kv3_signed10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerM) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerM_kv3_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerM) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerM_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerM) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerM_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerM) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerM_kv3_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerM) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerM_kv3_extend27_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerM) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_doscale_kv3_registerM_kv3_registerY_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_doscale) OPERAND(kv3_registerM) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerN_kv3_signed10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerN) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerN_kv3_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerN) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_registerN_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_variant) OPERAND(kv3_registerN) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerN_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerN) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerN_kv3_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerN) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_lsucond_kv3_registerY_kv3_registerN_kv3_extend27_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_variant) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerN) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_variant_kv3_doscale_kv3_registerN_kv3_registerY_kv3_registerZ, OPERANDS(5, OPERAND(kv3_variant) OPERAND(kv3_doscale) OPERAND(kv3_registerN) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_variant(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_variant(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_registerA_kv3_signed10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_speculate) OPERAND(kv3_registerA) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_registerA_kv3_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_speculate) OPERAND(kv3_registerA) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_registerA_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(4, OPERAND(kv3_speculate) OPERAND(kv3_registerA) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerA_kv3_registerZ, OPERANDS(5, OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerA) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerA_kv3_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerA) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerA_kv3_extend27_offset27_kv3_registerZ, OPERANDS(6, OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerA) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_speculate_kv3_doscale_kv3_registerA_kv3_registerY_kv3_registerZ, OPERANDS(5, OPERAND(kv3_speculate) OPERAND(kv3_doscale) OPERAND(kv3_registerA) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_registerAq_kv3_signed10_kv3_registerZ, OPERANDS(5, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_registerAq) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_registerAq_kv3_upper27_lower10_kv3_registerZ, OPERANDS(5, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_registerAq) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_registerAq_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(5, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_registerAq) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(4), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerAq_kv3_registerZ, OPERANDS(6, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerAq) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerAq_kv3_offset27_kv3_registerZ, OPERANDS(7, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerAq) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[6]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[5] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[6] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_lsucond_kv3_registerY_kv3_registerAq_kv3_extend27_offset27_kv3_registerZ, OPERANDS(7, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerAq) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[6]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[5] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[6] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_column_kv3_speculate_kv3_doscale_kv3_registerAq_kv3_registerY_kv3_registerZ, OPERANDS(6, OPERAND(kv3_column) OPERAND(kv3_speculate) OPERAND(kv3_doscale) OPERAND(kv3_registerAq) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_column(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_speculate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_column(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_speculate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_signed10_kv3_registerZ_kv3_registerT, OPERANDS(3, OPERAND(kv3_signed10) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_upper27_lower10_kv3_registerZ_kv3_registerT, OPERANDS(3, OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(1), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_extend27_upper27_lower10_kv3_registerZ_kv3_registerT, OPERANDS(3, OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(1), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_doscale_kv3_registerY_kv3_registerZ_kv3_registerT, OPERANDS(4, OPERAND(kv3_doscale) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerZ_kv3_registerT, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ_kv3_registerT, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ_kv3_registerT, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerT)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_signed10_kv3_registerZ_kv3_registerU, OPERANDS(3, OPERAND(kv3_signed10) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_upper27_lower10_kv3_registerZ_kv3_registerU, OPERANDS(3, OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(1), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_extend27_upper27_lower10_kv3_registerZ_kv3_registerU, OPERANDS(3, OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(1), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_doscale_kv3_registerY_kv3_registerZ_kv3_registerU, OPERANDS(4, OPERAND(kv3_doscale) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerZ_kv3_registerU, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ_kv3_registerU, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ_kv3_registerU, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_signed10_kv3_registerZ_kv3_registerV, OPERANDS(3, OPERAND(kv3_signed10) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_upper27_lower10_kv3_registerZ_kv3_registerV, OPERANDS(3, OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(1), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_extend27_upper27_lower10_kv3_registerZ_kv3_registerV, OPERANDS(3, OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(1), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_doscale_kv3_registerY_kv3_registerZ_kv3_registerV, OPERANDS(4, OPERAND(kv3_doscale) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerZ_kv3_registerV, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ_kv3_registerV, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ_kv3_registerV, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerV)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_signed10_kv3_registerZ_kv3_registerE, OPERANDS(3, OPERAND(kv3_signed10) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_upper27_lower10_kv3_registerZ_kv3_registerE, OPERANDS(3, OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(1), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_extend27_upper27_lower10_kv3_registerZ_kv3_registerE, OPERANDS(3, OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(1), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_doscale_kv3_registerY_kv3_registerZ_kv3_registerE, OPERANDS(4, OPERAND(kv3_doscale) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerZ_kv3_registerE, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ_kv3_registerE, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ_kv3_registerE, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerE)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerW_kv3_signed10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerW_kv3_upper27_lower10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(2), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerW_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(2), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_doscale_kv3_registerW_kv3_registerY_kv3_registerZ, OPERANDS(4, OPERAND(kv3_doscale) OPERAND(kv3_registerW) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerW_kv3_registerZ, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerW_kv3_offset27_kv3_registerZ, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerW_kv3_extend27_offset27_kv3_registerZ, OPERANDS(5, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerW) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_signed10_kv3_registerZ, OPERANDS(2, OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_upper27_lower10_kv3_registerZ, OPERANDS(2, OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(1), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(2, OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(1), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerY_kv3_registerZ, OPERANDS(2, OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_registerZ, OPERANDS(3, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ, OPERANDS(4, OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_registerY, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_signed10, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_signed10)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_upper27_lower10, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower10)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_extend27_upper27_lower10, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_extend27_upper27_lower10)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_upper27_lower5, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower5)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower5), IMMEDIATE(kv3_wrapped32)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped32(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<6; VALUE >>= 5; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 5; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped32(VALUE);  }))
Operands(kv3_splat32_kv3_registerW_kv3_registerZ_kv3_upper27_lower5, OPERANDS(4, OPERAND(kv3_splat32) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower5)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower5), IMMEDIATE(kv3_wrapped32)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_splat32(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped32(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<6; VALUE >>= 5; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_splat32(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 5; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped32(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ, OPERANDS(2, OPERAND(kv3_registerW) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_silent2_kv3_registerW_kv3_registerZ, OPERANDS(3, OPERAND(kv3_silent2) OPERAND(kv3_registerW) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_rounding2_kv3_silent2_kv3_registerW_kv3_registerZ, OPERANDS(4, OPERAND(kv3_rounding2) OPERAND(kv3_silent2) OPERAND(kv3_registerW) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_rounding2_kv3_silent2_kv3_registerW_kv3_registerP, OPERANDS(4, OPERAND(kv3_rounding2) OPERAND(kv3_silent2) OPERAND(kv3_registerW) OPERAND(kv3_registerP)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_stopbit2_stopbit4_kv3_startbit, OPERANDS(4, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_stopbit2_stopbit4) OPERAND(kv3_startbit)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12; VALUE >>= 4; WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); VALUE <<= 4; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_unsigned6(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerW_kv3_registerZ_kv3_unsigned6, OPERANDS(3, OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_unsigned6)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_comparison_kv3_registerW_kv3_registerZ_kv3_signed10, OPERANDS(4, OPERAND(kv3_comparison) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_signed10)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_comparison(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_comparison(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed10(VALUE);  }))
Operands(kv3_comparison_kv3_registerW_kv3_registerZ_kv3_upper27_lower10, OPERANDS(4, OPERAND(kv3_comparison) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower10)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_comparison(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_comparison(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed37(VALUE);  }))
Operands(kv3_comparison_kv3_registerW_kv3_registerZ_kv3_extend27_upper27_lower10, OPERANDS(4, OPERAND(kv3_comparison) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_extend27_upper27_lower10)), RELOCATABLE(RANK(4), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_comparison(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_comparison(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped64(VALUE);  }))
Operands(kv3_comparison_kv3_registerW_kv3_registerZ_kv3_registerY, OPERANDS(4, OPERAND(kv3_comparison) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_comparison(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_comparison(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_comparison_kv3_registerW_kv3_registerZ_kv3_upper27_lower5, OPERANDS(4, OPERAND(kv3_comparison) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower5)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower5), IMMEDIATE(kv3_wrapped32)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_comparison(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped32(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<6; VALUE >>= 5; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_comparison(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 5; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped32(VALUE);  }))
Operands(kv3_scalarcond_kv3_registerZ_kv3_registerW_kv3_signed10, OPERANDS(4, OPERAND(kv3_scalarcond) OPERAND(kv3_registerZ) OPERAND(kv3_registerW) OPERAND(kv3_signed10)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed10(VALUE);  }))
Operands(kv3_scalarcond_kv3_registerZ_kv3_registerW_kv3_upper27_lower10, OPERANDS(4, OPERAND(kv3_scalarcond) OPERAND(kv3_registerZ) OPERAND(kv3_registerW) OPERAND(kv3_upper27_lower10)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed37(VALUE);  }))
Operands(kv3_scalarcond_kv3_registerZ_kv3_registerW_kv3_extend27_upper27_lower10, OPERANDS(4, OPERAND(kv3_scalarcond) OPERAND(kv3_registerZ) OPERAND(kv3_registerW) OPERAND(kv3_extend27_upper27_lower10)), RELOCATABLE(RANK(4), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped64(VALUE);  }))
Operands(kv3_scalarcond_kv3_registerZ_kv3_registerW_kv3_registerY, OPERANDS(4, OPERAND(kv3_scalarcond) OPERAND(kv3_registerZ) OPERAND(kv3_registerW) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_simdcond_kv3_registerZ_kv3_registerW_kv3_registerY, OPERANDS(4, OPERAND(kv3_simdcond) OPERAND(kv3_registerZ) OPERAND(kv3_registerW) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_simplecond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_simplecond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerW_kv3_signed16, OPERANDS(2, OPERAND(kv3_registerW) OPERAND(kv3_signed16)), RELOCATABLE(RANK(2), OPERAND(kv3_signed16), IMMEDIATE(kv3_signed16)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed16(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<16)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<16)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed16(VALUE);  }))
Operands(kv3_registerW_kv3_extend6_upper27_lower10, OPERANDS(2, OPERAND(kv3_registerW) OPERAND(kv3_extend6_upper27_lower10)), RELOCATABLE(RANK(2), OPERAND(kv3_extend6_upper27_lower10), IMMEDIATE(kv3_signed43)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed43(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed43(VALUE);  }))
Operands(kv3_registerW_kv3_extend27_upper27_lower10, OPERANDS(2, OPERAND(kv3_registerW) OPERAND(kv3_extend27_upper27_lower10)), RELOCATABLE(RANK(2), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_wrapped64(VALUE);  }))
Operands(kv3_floatcomp_kv3_registerW_kv3_registerZ_kv3_registerY, OPERANDS(4, OPERAND(kv3_floatcomp) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_floatcomp(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_floatcomp(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_floatcomp_kv3_registerW_kv3_registerZ_kv3_upper27_lower5, OPERANDS(4, OPERAND(kv3_floatcomp) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower5)), RELOCATABLE(RANK(4), OPERAND(kv3_upper27_lower5), IMMEDIATE(kv3_wrapped32)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_floatcomp(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped32(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<6; VALUE >>= 5; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_floatcomp(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 5; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_wrapped32(VALUE);  }))
Operands(kv3_silent2_kv3_registerW_kv3_registerP, OPERANDS(3, OPERAND(kv3_silent2) OPERAND(kv3_registerW) OPERAND(kv3_registerP)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerW_kv3_registerZ_kv3_unsigned6, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_unsigned6)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerM_kv3_registerZ_kv3_registerY, OPERANDS(3, OPERAND(kv3_registerM) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerM_kv3_registerZ_kv3_signed10, OPERANDS(3, OPERAND(kv3_registerM) OPERAND(kv3_registerZ) OPERAND(kv3_signed10)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed10(VALUE);  }))
Operands(kv3_registerM_kv3_registerZ_kv3_upper27_lower10, OPERANDS(3, OPERAND(kv3_registerM) OPERAND(kv3_registerZ) OPERAND(kv3_upper27_lower10)), RELOCATABLE(RANK(3), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_signed37(VALUE);  }))
Operands(kv3_registerM_kv3_registerZ_kv3_extend27_upper27_lower10, OPERANDS(3, OPERAND(kv3_registerM) OPERAND(kv3_registerZ) OPERAND(kv3_extend27_upper27_lower10)), RELOCATABLE(RANK(3), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[2] = Immediate_Decode_kv3_wrapped64(VALUE);  }))
Operands(kv3_registerM_kv3_registerP_kv3_registerO, OPERANDS(3, OPERAND(kv3_registerM) OPERAND(kv3_registerP) OPERAND(kv3_registerO)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerW_kv3_registerZ_kv3_registerY, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerM_kv3_registerZ_kv3_registerY, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerM) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerM_kv3_registerP_kv3_registerO, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerM) OPERAND(kv3_registerP) OPERAND(kv3_registerO)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_registerN_kv3_registerR, OPERANDS(2, OPERAND(kv3_registerN) OPERAND(kv3_registerR)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_registerAl_kv3_registerZ_kv3_registerY, OPERANDS(3, OPERAND(kv3_registerAl) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerAh_kv3_registerZ_kv3_registerY, OPERANDS(3, OPERAND(kv3_registerAh) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerN_kv3_registerBe_kv3_registerCo_kv3_byteshift, OPERANDS(4, OPERAND(kv3_registerN) OPERAND(kv3_registerBe) OPERAND(kv3_registerCo) OPERAND(kv3_byteshift)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerN_kv3_registerBo_kv3_registerCe_kv3_byteshift, OPERANDS(4, OPERAND(kv3_registerN) OPERAND(kv3_registerBo) OPERAND(kv3_registerCe) OPERAND(kv3_byteshift)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerN_kv3_registerBe_kv3_registerCo_kv3_registerZ, OPERANDS(4, OPERAND(kv3_registerN) OPERAND(kv3_registerBe) OPERAND(kv3_registerCo) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerN_kv3_registerBo_kv3_registerCe_kv3_registerZ, OPERANDS(4, OPERAND(kv3_registerN) OPERAND(kv3_registerBo) OPERAND(kv3_registerCe) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerA_kv3_registerBe_kv3_registerCo_kv3_byteshift, OPERANDS(4, OPERAND(kv3_registerA) OPERAND(kv3_registerBe) OPERAND(kv3_registerCo) OPERAND(kv3_byteshift)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerA_kv3_registerBo_kv3_registerCe_kv3_byteshift, OPERANDS(4, OPERAND(kv3_registerA) OPERAND(kv3_registerBo) OPERAND(kv3_registerCe) OPERAND(kv3_byteshift)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_unsigned6(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_unsigned6(VALUE);  }))
Operands(kv3_registerA_kv3_registerBe_kv3_registerCo_kv3_registerZ, OPERANDS(4, OPERAND(kv3_registerA) OPERAND(kv3_registerBe) OPERAND(kv3_registerCo) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerA_kv3_registerBo_kv3_registerCe_kv3_registerZ, OPERANDS(4, OPERAND(kv3_registerA) OPERAND(kv3_registerBo) OPERAND(kv3_registerCe) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerAq_kv3_registerBq, OPERANDS(2, OPERAND(kv3_registerAq) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_registerAp_kv3_registerBp_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerAp) OPERAND(kv3_registerBp) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerAq_kv3_registerBq_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerAq) OPERAND(kv3_registerBq) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerA0_kv3_registerBp_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerA0) OPERAND(kv3_registerBp) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockReg0M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockReg0M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerA1_kv3_registerBp_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerA1) OPERAND(kv3_registerBp) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockReg1M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockReg1M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerA2_kv3_registerBp_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerA2) OPERAND(kv3_registerBp) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockReg2M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockReg2M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerA3_kv3_registerBp_kv3_registerC_kv3_registerD, OPERANDS(4, OPERAND(kv3_registerA3) OPERAND(kv3_registerBp) OPERAND(kv3_registerC) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_blockReg3M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_blockReg3M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAl_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAl) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_blockRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_blockRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAh_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAh) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_blockRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_blockRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAx_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAx) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_coproReg0M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_coproReg0M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAy_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAy) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_coproReg1M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_coproReg1M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAz_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAz) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_coproReg2M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_coproReg2M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_roundint_kv3_saturate_kv3_registerAt_kv3_registerBq, OPERANDS(4, OPERAND(kv3_roundint) OPERAND(kv3_saturate) OPERAND(kv3_registerAt) OPERAND(kv3_registerBq)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_roundint(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_saturate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_coproReg3M4(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<14;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_roundint(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_saturate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_coproReg3M4(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>14)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_matrixReg(VALUE);  }))
Operands(kv3_xrounding_kv3_silent2_kv3_rectify_kv3_registerA_kv3_registerB, OPERANDS(5, OPERAND(kv3_xrounding) OPERAND(kv3_silent2) OPERAND(kv3_rectify) OPERAND(kv3_registerA) OPERAND(kv3_registerB)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_rectify(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<7;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_rectify(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_xrounding_kv3_silent2_kv3_registerA_kv3_registerBp, OPERANDS(4, OPERAND(kv3_xrounding) OPERAND(kv3_silent2) OPERAND(kv3_registerA) OPERAND(kv3_registerBp)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_wideReg(VALUE);  }))
Operands(kv3_registerA_kv3_registerBe, OPERANDS(2, OPERAND(kv3_registerA) OPERAND(kv3_registerBe)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }))
Operands(kv3_registerA_kv3_registerBo, OPERANDS(2, OPERAND(kv3_registerA) OPERAND(kv3_registerBo)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }))
Operands(kv3_registerN_kv3_registerBe, OPERANDS(2, OPERAND(kv3_registerN) OPERAND(kv3_registerBe)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegE(VALUE);  }))
Operands(kv3_registerN_kv3_registerBo, OPERANDS(2, OPERAND(kv3_registerN) OPERAND(kv3_registerBo)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorRegO(VALUE);  }))
Operands(kv3_brknumber, OPERANDS(1, OPERAND(kv3_brknumber)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Immediate_Encode_kv3_brknumber(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Immediate_Decode_kv3_brknumber(VALUE);  }))
Operands(v2_systemT2_kv3_registerZ, OPERANDS(2, OPERAND(v2_systemT2) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_v2_onlyfxReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_v2_onlyfxReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(v2_systemAlone_kv3_registerZ, OPERANDS(2, OPERAND(v2_systemAlone) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_v2_aloneReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_v2_aloneReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(v2_systemT4_kv3_registerZ, OPERANDS(2, OPERAND(v2_systemT4) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_v2_systemReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_v2_systemReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerZ_v2_systemS2, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(v2_systemS2)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_v2_onlygetReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_v2_onlygetReg(VALUE);  }))
Operands(kv3_registerZ_v2_systemS3, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(v2_systemS3)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_v2_systemReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_v2_systemReg(VALUE);  }))
Operands(v2_systemT3_kv3_registerZ, OPERANDS(2, OPERAND(v2_systemT3) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_v2_onlysetReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_v2_onlysetReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_registerZ_v2_systemS4, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(v2_systemS4)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_v2_onlyswapReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_v2_onlyswapReg(VALUE);  }))
Operands(kv3_registerZ_v2_systemAlone, OPERANDS(2, OPERAND(kv3_registerZ) OPERAND(v2_systemAlone)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_v2_aloneReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<9)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<9)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_v2_aloneReg(VALUE);  }))
Operands(kv3_boolcas_kv3_signed10_kv3_registerZ_kv3_registerU, OPERANDS(4, OPERAND(kv3_boolcas) OPERAND(kv3_signed10) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_boolcas_kv3_upper27_lower10_kv3_registerZ_kv3_registerU, OPERANDS(4, OPERAND(kv3_boolcas) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(2), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_boolcas_kv3_doscale_kv3_registerY_kv3_registerZ_kv3_registerU, OPERANDS(5, OPERAND(kv3_boolcas) OPERAND(kv3_doscale) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_doscale(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_doscale(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_boolcas_kv3_lsucond_kv3_registerY_kv3_registerZ_kv3_registerU, OPERANDS(5, OPERAND(kv3_boolcas) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_boolcas_kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ_kv3_registerU, OPERANDS(6, OPERAND(kv3_boolcas) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_boolcas_kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ_kv3_registerU, OPERANDS(6, OPERAND(kv3_boolcas) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ) OPERAND(kv3_registerU)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_boolcas(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<25;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>25)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_boolcas(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_cachelev_kv3_signed10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_cachelev) OPERAND(kv3_signed10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed10(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed10(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_upper27_lower10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_cachelev) OPERAND(kv3_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(2), OPERAND(kv3_upper27_lower10), IMMEDIATE(kv3_signed37)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_signed37(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_signed37(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_extend27_upper27_lower10_kv3_registerZ, OPERANDS(3, OPERAND(kv3_cachelev) OPERAND(kv3_extend27_upper27_lower10) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(2), OPERAND(kv3_extend27_upper27_lower10), IMMEDIATE(kv3_wrapped64)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Immediate_Encode_kv3_wrapped64(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<10)-1))<<6; VALUE >>= 10; WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 10; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<10)-1); OperandsBuffer_DECODED(buffer)[1] = Immediate_Decode_kv3_wrapped64(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_registerY_kv3_registerZ, OPERANDS(3, OPERAND(kv3_cachelev) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_lsucond_kv3_registerY_kv3_registerZ, OPERANDS(4, OPERAND(kv3_cachelev) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_lsucond_kv3_registerY_kv3_offset27_kv3_registerZ, OPERANDS(5, OPERAND(kv3_cachelev) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed27(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed27(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_cachelev_kv3_lsucond_kv3_registerY_kv3_extend27_offset27_kv3_registerZ, OPERANDS(5, OPERAND(kv3_cachelev) OPERAND(kv3_lsucond) OPERAND(kv3_registerY) OPERAND(kv3_extend27_offset27) OPERAND(kv3_registerZ)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_cachelev(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<2)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_scalarcond(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = Immediate_Encode_kv3_signed54(__decoded); WORDS[1] |= (VALUE&(((uint32_t)1<<27)-1))<<0; VALUE >>= 27; WORDS[2] |= (VALUE&(((uint32_t)1<<27)-1))<<0;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<2)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_cachelev(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_scalarcond(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[2]>>0)&(((uint32_t)1<<27)-1); VALUE <<= 27; VALUE |= (WORDS[1]>>0)&(((uint32_t)1<<27)-1); OperandsBuffer_DECODED(buffer)[3] = Immediate_Decode_kv3_signed54(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_conjugate_kv3_rounding_kv3_silent_kv3_registerW_kv3_registerZ_kv3_registerY, OPERANDS(6, OPERAND(kv3_conjugate) OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerW) OPERAND(kv3_registerZ) OPERAND(kv3_registerY)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_conjugate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<6;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_conjugate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_singleReg(VALUE);  }))
Operands(kv3_conjugate_kv3_rounding_kv3_silent_kv3_registerM_kv3_registerP_kv3_registerO, OPERANDS(6, OPERAND(kv3_conjugate) OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerM) OPERAND(kv3_registerP) OPERAND(kv3_registerO)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_conjugate(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_conjugate(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerW_kv3_registerP_kv3_registerO, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerW) OPERAND(kv3_registerP) OPERAND(kv3_registerO)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_singleReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_singleReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_rounding_kv3_silent_kv3_registerM_kv3_registerQ_kv3_registerR, OPERANDS(5, OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerM) OPERAND(kv3_registerQ) OPERAND(kv3_registerR)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<8;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_quadReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<2;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_quadReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>2)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_quadReg(VALUE);  }))
Operands(kv3_multransm_multransl_kv3_rounding_kv3_silent_kv3_registerM_kv3_registerP_kv3_registerO, OPERANDS(6, OPERAND(kv3_multransm_multransl) OPERAND(kv3_rounding) OPERAND(kv3_silent) OPERAND(kv3_registerM) OPERAND(kv3_registerP) OPERAND(kv3_registerO)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_transpose(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<6; VALUE >>= 1; WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<18;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<15;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }; { OperandDecoded __decoded = decoded[5]; OperandEncoded VALUE = RegClass_Encode_kv3_pairedReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<7;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<1)-1); VALUE <<= 1; VALUE |= (WORDS[0]>>6)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_transpose(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>15)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[2] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_pairedReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>7)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[5] = RegClass_Decode_kv3_pairedReg(VALUE);  }))
Operands(kv3_channel_kv3_registerA, OPERANDS(2, OPERAND(kv3_channel) OPERAND(kv3_registerA)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_channel(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<24;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<18;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>24)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_channel(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>18)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_registerAp_kv3_registerBp_kv3_registerDp, OPERANDS(3, OPERAND(kv3_registerAp) OPERAND(kv3_registerBp) OPERAND(kv3_registerDp)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_wideReg(VALUE);  }))
Operands(kv3_registerAq_kv3_registerB_kv3_registerD, OPERANDS(3, OPERAND(kv3_registerAq) OPERAND(kv3_registerB) OPERAND(kv3_registerD)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = RegClass_Encode_kv3_matrixReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<4)-1))<<20;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<12;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<6)-1))<<0;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>20)&(((uint32_t)1<<4)-1); OperandsBuffer_DECODED(buffer)[0] = RegClass_Decode_kv3_matrixReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>12)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[1] = RegClass_Decode_kv3_vectorReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>0)&(((uint32_t)1<<6)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorReg(VALUE);  }))
Operands(kv3_xrounding_kv3_silent2_kv3_registerAe_kv3_registerBp_kv3_registerDp, OPERANDS(5, OPERAND(kv3_xrounding) OPERAND(kv3_silent2) OPERAND(kv3_registerAe) OPERAND(kv3_registerBp) OPERAND(kv3_registerDp)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegE(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegE(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_wideReg(VALUE);  }))
Operands(kv3_xrounding_kv3_silent2_kv3_registerAo_kv3_registerBp_kv3_registerDp, OPERANDS(5, OPERAND(kv3_xrounding) OPERAND(kv3_silent2) OPERAND(kv3_registerAo) OPERAND(kv3_registerBp) OPERAND(kv3_registerDp)), RELOCATABLE(RANK(0), OPERAND(_UNDEF), IMMEDIATE(_UNDEF)),
         ENCODE(uint32_t *restrict WORDS = codeWords; { OperandDecoded __decoded = decoded[0]; OperandEncoded VALUE = Modifier_Encode_kv3_rounding(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<3)-1))<<8;  }; { OperandDecoded __decoded = decoded[1]; OperandEncoded VALUE = Modifier_Encode_kv3_silent(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<1)-1))<<11;  }; { OperandDecoded __decoded = decoded[2]; OperandEncoded VALUE = RegClass_Encode_kv3_vectorRegO(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<19;  }; { OperandDecoded __decoded = decoded[3]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<13;  }; { OperandDecoded __decoded = decoded[4]; OperandEncoded VALUE = RegClass_Encode_kv3_wideReg(__decoded); WORDS[0] |= (VALUE&(((uint32_t)1<<5)-1))<<1;  }),
         DECODE(const uint32_t *restrict WORDS = codeWords; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>8)&(((uint32_t)1<<3)-1); OperandsBuffer_DECODED(buffer)[0] = Modifier_Decode_kv3_rounding(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>11)&(((uint32_t)1<<1)-1); OperandsBuffer_DECODED(buffer)[1] = Modifier_Decode_kv3_silent(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>19)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[2] = RegClass_Decode_kv3_vectorRegO(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>13)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[3] = RegClass_Decode_kv3_wideReg(VALUE);  }; { OperandEncoded VALUE = 0; VALUE |= (WORDS[0]>>1)&(((uint32_t)1<<5)-1); OperandsBuffer_DECODED(buffer)[4] = RegClass_Decode_kv3_wideReg(VALUE);  }))
#endif/*Operands*/
#undef Operands

#ifndef Operands_MAXCOUNT
#define Operands_MAXCOUNT 12
#endif/*Operands_MAXCOUNT*/

